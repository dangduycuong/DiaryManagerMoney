//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let reuseIdentifier = reuseIdentifier()

  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.font` struct is generated, and contains static references to 12 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `PlayfairDisplay-Black`.
    var playfairDisplayBlack: RswiftResources.FontResource { .init(name: "PlayfairDisplay-Black", bundle: bundle, filename: "PlayfairDisplay-Black.ttf") }

    /// Font `PlayfairDisplay-BlackItalic`.
    var playfairDisplayBlackItalic: RswiftResources.FontResource { .init(name: "PlayfairDisplay-BlackItalic", bundle: bundle, filename: "PlayfairDisplay-BlackItalic.ttf") }

    /// Font `PlayfairDisplay-Bold`.
    var playfairDisplayBold: RswiftResources.FontResource { .init(name: "PlayfairDisplay-Bold", bundle: bundle, filename: "PlayfairDisplay-Bold.ttf") }

    /// Font `PlayfairDisplay-BoldItalic`.
    var playfairDisplayBoldItalic: RswiftResources.FontResource { .init(name: "PlayfairDisplay-BoldItalic", bundle: bundle, filename: "PlayfairDisplay-BoldItalic.ttf") }

    /// Font `PlayfairDisplay-ExtraBold`.
    var playfairDisplayExtraBold: RswiftResources.FontResource { .init(name: "PlayfairDisplay-ExtraBold", bundle: bundle, filename: "PlayfairDisplay-ExtraBold.ttf") }

    /// Font `PlayfairDisplay-ExtraBoldItalic`.
    var playfairDisplayExtraBoldItalic: RswiftResources.FontResource { .init(name: "PlayfairDisplay-ExtraBoldItalic", bundle: bundle, filename: "PlayfairDisplay-ExtraBoldItalic.ttf") }

    /// Font `PlayfairDisplay-Italic`.
    var playfairDisplayItalic: RswiftResources.FontResource { .init(name: "PlayfairDisplay-Italic", bundle: bundle, filename: "PlayfairDisplay-Italic.ttf") }

    /// Font `PlayfairDisplay-Medium`.
    var playfairDisplayMedium: RswiftResources.FontResource { .init(name: "PlayfairDisplay-Medium", bundle: bundle, filename: "PlayfairDisplay-Medium.ttf") }

    /// Font `PlayfairDisplay-MediumItalic`.
    var playfairDisplayMediumItalic: RswiftResources.FontResource { .init(name: "PlayfairDisplay-MediumItalic", bundle: bundle, filename: "PlayfairDisplay-MediumItalic.ttf") }

    /// Font `PlayfairDisplay-Regular`.
    var playfairDisplayRegular: RswiftResources.FontResource { .init(name: "PlayfairDisplay-Regular", bundle: bundle, filename: "PlayfairDisplay-Regular.ttf") }

    /// Font `PlayfairDisplay-SemiBold`.
    var playfairDisplaySemiBold: RswiftResources.FontResource { .init(name: "PlayfairDisplay-SemiBold", bundle: bundle, filename: "PlayfairDisplay-SemiBold.ttf") }

    /// Font `PlayfairDisplay-SemiBoldItalic`.
    var playfairDisplaySemiBoldItalic: RswiftResources.FontResource { .init(name: "PlayfairDisplay-SemiBoldItalic", bundle: bundle, filename: "PlayfairDisplay-SemiBoldItalic.ttf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [playfairDisplayBlack, playfairDisplayBlackItalic, playfairDisplayBold, playfairDisplayBoldItalic, playfairDisplayExtraBold, playfairDisplayExtraBoldItalic, playfairDisplayItalic, playfairDisplayMedium, playfairDisplayMediumItalic, playfairDisplayRegular, playfairDisplaySemiBold, playfairDisplaySemiBoldItalic].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 13 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `PlayfairDisplay-Black.ttf`.
    var playfairDisplayBlackTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-Black", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-BlackItalic.ttf`.
    var playfairDisplayBlackItalicTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-BlackItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-Bold.ttf`.
    var playfairDisplayBoldTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-Bold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-BoldItalic.ttf`.
    var playfairDisplayBoldItalicTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-BoldItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-ExtraBold.ttf`.
    var playfairDisplayExtraBoldTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-ExtraBold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-ExtraBoldItalic.ttf`.
    var playfairDisplayExtraBoldItalicTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-ExtraBoldItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-Italic.ttf`.
    var playfairDisplayItalicTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-Italic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-Medium.ttf`.
    var playfairDisplayMediumTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-Medium", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-MediumItalic.ttf`.
    var playfairDisplayMediumItalicTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-MediumItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-Regular.ttf`.
    var playfairDisplayRegularTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-Regular", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-SemiBold.ttf`.
    var playfairDisplaySemiBoldTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-SemiBold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PlayfairDisplay-SemiBoldItalic.ttf`.
    var playfairDisplaySemiBoldItalicTtf: RswiftResources.FileResource { .init(name: "PlayfairDisplay-SemiBoldItalic", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `animation_lk98ini8.json`.
    var animation_lk98ini8Json: RswiftResources.FileResource { .init(name: "animation_lk98ini8", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.reuseIdentifier` struct is generated, and contains static references to 1 reuse identifiers.
  struct reuseIdentifier {

    /// Reuse identifier `Cell`.
    let cell: RswiftResources.ReuseIdentifier<CustomTableViewCell> = .init(identifier: "Cell")
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UINavigationController

      let bundle: Foundation.Bundle

      let name = "Main"

      var addItemViewController: RswiftResources.StoryboardViewControllerIdentifier<AddItemViewController> { .init(identifier: "AddItemViewController", storyboard: name, bundle: bundle) }
      var homeViewController: RswiftResources.StoryboardViewControllerIdentifier<HomeViewController> { .init(identifier: "HomeViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if addItemViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'addItemViewController' could not be loaded from storyboard 'Main' as 'AddItemViewController'.") }
        if homeViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'homeViewController' could not be loaded from storyboard 'Main' as 'HomeViewController'.") }
      }
    }
  }
}